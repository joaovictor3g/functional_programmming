minorOfTwo :: Int -> Int -> Int
minorOfTwo = min

minorOfThree :: Int -> Int -> Int -> Int
minorOfThree x y z = min z (min x y) 

factorial :: Int -> Int
factorial 0 = 1
factorial 1 = 1
factorial n = n * factorial (n - 1)

fibonacci :: Int -> Int
fibonacci 0 = 0
fibonacci 1 = 1
fibonacci 2 = 1
fibonacci n = fibonacci (n - 1) + fibonacci (n - 2)  

element :: Int -> [Int] -> Int
element n u = u !! n

contains :: Int -> [Int] -> Bool
contains x u = x `elem` u

total :: [Int] -> Int
total u = u 
